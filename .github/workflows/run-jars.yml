
name: Run JAR File

on:
  push:
    branches: [ "main" ]
    
jobs:
 run-jar:
   runs-on: windows-latest

   permissions:
      contents: read
      issues: write
      pull-requests: write

   steps:
   - name: checkout code
     uses: actions/checkout@v3
     with:
        fetch-depth: 1
     
   - name: Set up JDK 17
     uses: actions/setup-java@v4
     with:
      java-version: '17'
      distribution: 'temurin'

   - name: Install Google Chrome
     run: |
        $chrome_installer = "C:\chrome_installer.exe"
        Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/standalonesetup64.exe" -OutFile $chrome_installer
        Start-Process -FilePath $chrome_installer -ArgumentList "/silent /install" -Wait
        Remove-Item -Force $chrome_installer

   - name: Find and run JAR files
     shell: pwsh
     run: |
        # Define the directory for reports
        $reportDir = "jar_execution_reports"
        New-Item -ItemType Directory -Force -Path $reportDir

        # Find all JAR files in the repository
        $jarFiles = Get-ChildItem -Recurse -Filter *.jar

        # Check if any JAR files are found
        if ($jarFiles.Count -eq 0) {
            Write-Output "No JAR files found."
            exit 1
        } else {
            Write-Output "Found JAR files:"
            $jarFiles | ForEach-Object { Write-Output $_.FullName }
        }

        # Loop through each JAR file and execute it
        foreach ($jarFile in $jarFiles) {
            Write-Output "Executing $($jarFile.FullName)..."
            
            # Run the JAR file and capture output
            $outputFile = Join-Path $reportDir ($jarFile.BaseName + ".log")
            java -jar $jarFile.FullName *> $outputFile 2>&1

            Write-Output "Output for $($jarFile.FullName) has been saved to $outputFile"
        }

   - name: Upload JAR execution reports
     uses: actions/upload-artifact@v3
     with:
        name: jar-execution-reports
        path: jar_execution_reports/
